[package]
name = "valkey-timeseries"
version = "0.1.0"
edition = "2021"
readme = "README.md"
repository = "https://github.com/ccollie/valkey-timeseries"
homepage = "https://github.com/ccollie/valkey-timeseries"
description = "A Timeseries data type for Valkey"

[dependencies]
ahash = { version = "0.8", features = ["std", "serde"] }
blart = "0.3"
bon = "3.6"
byte-pool = "0.2"
cfg-if = "1.0.0"
chili = "0.2"
chrono = { version = "0.4", features = ["serde"] }
croaring = "2.3"
dtype_variant = "0.0.12"
enquote = "1.1"
enum_dispatch = "0.3"
flatbuffers = "25.2"
get-size = { version = "^0.1", features = ["derive"] }
hashify = { version = "^0.2" }
linkme = "0.3.32"
logos = "0.15"
machineid-rs = "1.2"
min-max-heap = "1.3"
num-traits = "0.2"
joinkit = "0.2.0"
lazy_static = "1.5.0"
papaya = "0.2"
pco = "0.4"
rand = { version = "0.9", features = ["small_rng"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
smallvec = { version = "2.0.0-alpha.11", features = ["std"] }
snowdon = "0.2.0"
thiserror = "2.0"
valkey-module = "0.1"
valkey-module-macros = "0.1"
rayon = "1.10.0"
regex = "1.11.1"
strum = { version = "0.27", features = ["derive"] }
strum_macros = "0.27"
yasi = "0.1.5"

[dev-dependencies]
test-case = "3.3.1"

[lib]
name="valkey_timeseries"
crate-type=["cdylib"]

[profile.dev]
opt-level = 0
debug = 2
debug-assertions = true

[profile.release]
lto = true            # Link-time optimization
codegen-units = 1     # Better optimization (slower compile)
opt-level = 3         # Maximum optimization
panic = "abort"       # Smaller binary size
strip = true

[features]
default = ["min-valkey-compatibility-version-8-0", "croaring/alloc"]
enable-system-alloc = ["valkey-module/enable-system-alloc"]
min-valkey-compatibility-version-8-0 = ["valkey-module/min-valkey-compatibility-version-8-0"]
valkey_8_0 = []  # Valkey-timeseries is intended to be loaded on server versions >= Valkey 8.1 and by default it is built this way (unless this flag is provided). It is however compatible with Valkey version 8.0 if the user explicitly provides this feature flag in their cargo build command.
use-redismodule-api = [] # We don't support this feature flag which is why it is empty.